#+title: filepaths

Inspired by [[https://github.com/vindarel/cl-str][str]], this library offers modern and consistent filepath manipulation
for Common Lisp.

It addresses three main issues found with the status quo, namely:

- Centrality: Functionality is spread across the standard library and =uiop=.
- Completeness: A number of common operations found in newer languages are missing entirely.
- Clarity: Function names are often unintuitive.

The =filepaths= library solves these issues by offering functions commonly found
elsewhere while naming them what you'd generally expect them to be.

Intuitive concatenation:

#+begin_src lisp
(filepaths:join "/home/you/code" "common-lisp" "hello.lisp")
#+end_src

#+RESULTS:
: #P"/home/you/code/common-lisp/hello.lisp"

Swapping the extension:

#+begin_src lisp
(filepaths:with-extension #p"/home/you/code/common-lisp/hello.lisp" "txt")
#+end_src

#+RESULTS:
: #P"/home/you/code/common-lisp/hello.txt"

Swapping the directory portion:

#+begin_src lisp
(filepaths:with-parent #p"/home/you/code/common-lisp/hello.lisp" "/tmp")
#+end_src

#+RESULTS:
: #P"/tmp/hello.lisp"

And much more! Note that this library is currently _Unix only_ and doesn't offer
functions for communicating with the filesystem to test if files exist, etc.

* Installation

This library has no external dependencies. It only uses standard library functionality.

* Usage

It is recommended that you import this library with the nickname =path= or =p=.

#+begin_src lisp
(:local-nicknames (:p :filepaths))
#+end_src

** Structural Tests

*** rootp, emptyp

Is the given PATH the root directory?

#+begin_src lisp
(filepaths:rootp #p"/")
#+end_src

#+RESULTS:
: T

Is the given PATH an empty string?

#+begin_src lisp
(filepaths:emptyp #p"")
#+end_src

#+RESULTS:
: T

*** starts-with-p, ends-with-p

Are the initial components of a PATH some BASE?

#+begin_src lisp
(filepaths:starts-with-p #p"/foo/bar/baz/zing.json" "/foo/bar")
#+end_src

#+RESULTS:
: T

Are the final components of a PATH some given CHILD?

#+begin_src lisp
(filepaths:ends-with-p #p"/foo/bar/baz/zing.json" "baz/zing.json")
#+end_src

#+RESULTS:
: T

*** directoryp

Yields T if the PATH represents a directory.

#+begin_src lisp
(filepaths:directoryp #p"/foo/bar/")
#+end_src

#+RESULTS:
: T

#+begin_src lisp
(filepaths:directoryp #p"/foo/bar/baz.txt")
#+end_src

#+RESULTS:
: NIL

** Construction

*** join

Combine two or more components together.

#+begin_src lisp
(filepaths:join "/foo" "bar" "baz" "test.json")
#+end_src

#+RESULTS:
: #P"/foo/bar/baz/test.json"

#+begin_src lisp
(filepaths:join #p"/bar/baz/" #p"foo.json")
#+end_src

#+RESULTS:
: #P"/bar/baz/foo.json"

** Component Access
** Conversion
** Conditions

* Further Work

- Windows support
